{
  "stats": {
    "suites": 12,
    "tests": 54,
    "passes": 49,
    "pending": 0,
    "failures": 4,
    "testsRegistered": 54,
    "passPercent": 90.74074074074075,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 1,
    "hasSkipped": true,
    "start": "2025-09-16T06:37:36.897Z",
    "end": "2025-09-16T07:51:41.298Z",
    "duration": 4444401
  },
  "results": [
    {
      "uuid": "162f6486-2c34-466a-9e4b-b49f3d8b7f46",
      "title": "",
      "fullFile": "cypress\\e2e\\MPost\\LoginPage.cy.ts",
      "file": "cypress\\e2e\\MPost\\LoginPage.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f94cc438-cc66-4221-9e57-6a4fcb19a53c",
          "title": "MPost Login Page",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should load the Login Page successfully",
              "fullTitle": "MPost Login Page Should load the Login Page successfully",
              "timedOut": null,
              "duration": 11071,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains(\"h2\", \"Login to your account\").should(\"be.visible\");\n// Click on the Login button\ncy.get(\"button[type='submit']\").contains(\"Sign In\").click();\n// Assert on the redirection to the login page\ncy.url().should(\"eq\", \"https://staging.mpost.global/auth/login\");\ncy.wait(2000);\n// Assert on the presence of required fields\ncy.get(\"input[type='email']\").should(\"be.visible\");\ncy.get(\"input[id='password']\").should(\"be.visible\");\ncy.get(\"button[type='submit']\").should(\"be.visible\");\ncy.contains(\"Sign up\").should(\"be.visible\");\ncy.contains(\"Forgot password?\").should(\"be.visible\");",
              "err": {},
              "uuid": "692836d8-63d9-4636-afe4-cd27047b5cdc",
              "parentUUID": "f94cc438-cc66-4221-9e57-6a4fcb19a53c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should validate empty field of the form",
              "fullTitle": "MPost Login Page should validate empty field of the form",
              "timedOut": null,
              "duration": 5268,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//  Assert the presence of the text \"Login to your account\"\ncy.contains(\"h2\", \"Login to your account\").should(\"be.visible\");\n// Select the \"Email\" option and click on it\ncy.contains(\"button\", \"Email\").should(\"be.visible\").click();\n// Click \"Sign In\" without filling the form \ncy.contains(\"button\", \"Sign In\").click();\n// Assert validation messages for required fields\ncy.get(\"div.text-red-500.text-sm\")\n    .should(\"have.length.at.least\", 1)\n    .each(($el) => {\n    cy.wrap($el).should(\"contain.text\", \"Required\");\n});\n// Assert the presence of \"Forgot password?\" link\ncy.contains(\"a\", \"Forgot password?\")\n    .should(\"be.visible\")\n    .and(\"have.attr\", \"href\", \"/auth/forgot-password\");",
              "err": {},
              "uuid": "324e63fb-ad7d-44c5-9634-73c2b9098490",
              "parentUUID": "f94cc438-cc66-4221-9e57-6a4fcb19a53c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show error message for invalid email",
              "fullTitle": "MPost Login Page should show error message for invalid email",
              "timedOut": null,
              "duration": 6069,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Type invalid email into email input\ncy.get(\"input[name='identifier']\").type(\"Invalidemail\");\n// Type some password \ncy.get(\"input[name='password']\").type(\"randomPassword\");\n// Click Sign In\ncy.contains(\"button\", \"Sign In\").click();\n// Assert error message appears\ncy.get(\"div.text-red-500.text-sm\")\n    .should(\"be.visible\")\n    .and(($el) => {\n    const text = $el.text();\n    expect(text).to.satisfy((t) => t.includes(\"Invalid email format\") || t.includes(\"Required\"));\n});",
              "err": {},
              "uuid": "06eb996a-4481-4bb6-aac4-7145e1275c88",
              "parentUUID": "f94cc438-cc66-4221-9e57-6a4fcb19a53c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should allow phone number login and validate empty submission",
              "fullTitle": "MPost Login Page should allow phone number login and validate empty submission",
              "timedOut": null,
              "duration": 9162,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// 1. Click on Phone Number tab\ncy.contains(\"button\", \"Phone Number\").click();\n// 2. Assert the presence of the phone number input field\ncy.get(\"input[name='identifier'][type='tel']\")\n    .should(\"exist\")\n    .and(\"be.visible\")\n    .and(\"have.attr\", \"placeholder\", \"Enter your phone number\");\ncy.wait(4000);\n// 3. Assert the presence of the country code select\ncy.get(\"select[name='identifierCountry']\")\n    .should(\"exist\");\n// 4. Click \"Sign In\" without filling phone number\ncy.contains(\"button span\", \"Sign In\").click();\n// 5. Assert the error message \"Required\"\ncy.get(\"div.text-red-500.text-sm\")\n    .should(\"be.visible\")\n    .and(\"contain.text\", \"Required\");",
              "err": {},
              "uuid": "bc5b5a3e-7748-494f-ab84-937d261f5ab9",
              "parentUUID": "f94cc438-cc66-4221-9e57-6a4fcb19a53c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display all Forgot Password elements correctly",
              "fullTitle": "MPost Login Page should display all Forgot Password elements correctly",
              "timedOut": null,
              "duration": 6798,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on the \"Forgot password?\" link\ncy.contains(\"a\", \"Forgot password?\")\n    .should(\"be.visible\")\n    .and(\"have.attr\", \"href\", \"/auth/forgot-password\").click();\n// Assert presence of the text \"Forgot Password\"\ncy.contains(\"Forgot Password\").should(\"be.visible\");\n// Assert presence of the buttons \"Email\" and \"Phone Number\"\ncy.contains(\"button\", \"Email\").should(\"exist\").and(\"be.visible\");\ncy.contains(\"button\", \"Phone Number\").should(\"exist\").and(\"be.visible\");\n// Assert presence of the email input field\ncy.get(\"input[name='identifier']\")\n    .should(\"exist\")\n    .and(\"be.visible\")\n    .and(\"have.attr\", \"placeholder\", \"Enter your email\");\n// Assert presence of the \"Send Reset Instructions\" button\ncy.contains(\"button span\", \"Send Reset Instructions\")\n    .should(\"exist\")\n    .and(\"be.visible\");",
              "err": {},
              "uuid": "84a2dd4f-c63e-4f7a-becd-275ab0dfdcc4",
              "parentUUID": "f94cc438-cc66-4221-9e57-6a4fcb19a53c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display confirmation message and allow return to login",
              "fullTitle": "MPost Login Page should display confirmation message and allow return to login",
              "timedOut": null,
              "duration": 14045,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on the \"Forgot password?\" link\ncy.contains(\"a\", \"Forgot password?\")\n    .should(\"be.visible\")\n    .and(\"have.attr\", \"href\", \"/auth/forgot-password\").click();\ncy.wait(3000);\n// Fill in a valid email address\ncy.get(\"input[name='identifier']\")\n    .should(\"exist\")\n    .and(\"be.visible\")\n    .type(\"irachriskhan@gmail.com\");\ncy.get(\"button[type='submit']\").click();\ncy.wait(3000);\n// Assert presence of the text \"Password Reset Email Sent\"\ncy.contains(\"h3\", \"Password Reset Email Sent\")\n    .should(\"exist\")\n    .and(\"be.visible\");\n// Assert presence of the \"Return to login\" link\ncy.contains(\"a\", \"Return to login\")\n    .should(\"exist\")\n    .and(\"be.visible\")\n    .and(\"have.attr\", \"href\", \"/auth/login\");\n// 3. Assert redirection to login page if clicked\ncy.contains(\"a\", \"Return to login\").click();\ncy.url().should(\"include\", \"/auth/login\");\n// Optional: confirm login heading exists on redirected page\ncy.contains(\"h2\", \"Login to your account\").should(\"be.visible\");",
              "err": {},
              "uuid": "c28bc552-9f52-476f-a997-115f11d2cd84",
              "parentUUID": "f94cc438-cc66-4221-9e57-6a4fcb19a53c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "692836d8-63d9-4636-afe4-cd27047b5cdc",
            "324e63fb-ad7d-44c5-9634-73c2b9098490",
            "06eb996a-4481-4bb6-aac4-7145e1275c88",
            "bc5b5a3e-7748-494f-ab84-937d261f5ab9",
            "84a2dd4f-c63e-4f7a-becd-275ab0dfdcc4",
            "c28bc552-9f52-476f-a997-115f11d2cd84"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 52413,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "47e72ea2-f22a-416a-a038-64d23365b99e",
      "title": "",
      "fullFile": "cypress\\e2e\\MPost\\RegistrationPage.cy.ts",
      "file": "cypress\\e2e\\MPost\\RegistrationPage.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ebfe2b90-3899-4d9e-989c-d5a503f07b8c",
          "title": "MPost Registration Page Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should load the registration page successfully",
              "fullTitle": "MPost Registration Page Tests should load the registration page successfully",
              "timedOut": null,
              "duration": 7954,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', '/auth/registration');\ncy.get(\"div > h1[class='text-xl sm:text-4xl md:text-5xl font-semibold mb-1 text-white text-center md:text-left']\").contains('Registration').should('be.visible');\ncy.get(\"form > div[class='flex gap-3 pt-4'] > button[type='submit']\").should('be.visible').contains('Continue');",
              "err": {},
              "uuid": "4f5a5ae4-cbf0-4dff-8d8d-739b7c00ef25",
              "parentUUID": "ebfe2b90-3899-4d9e-989c-d5a503f07b8c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show validation error when submitting without selecting account type",
              "fullTitle": "MPost Registration Page Tests should show validation error when submitting without selecting account type",
              "timedOut": null,
              "duration": 4755,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"form > div[class='flex gap-3 pt-4'] > button[type='submit']\").click();\ncy.get(\"div[class='text-red-500 text-sm']\").contains('Required').should('be.visible');",
              "err": {},
              "uuid": "3dcf4521-afb4-43a2-bc67-dd355d7ab18c",
              "parentUUID": "ebfe2b90-3899-4d9e-989c-d5a503f07b8c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show errors when required fields are empty",
              "fullTitle": "MPost Registration Page Tests should show errors when required fields are empty",
              "timedOut": null,
              "duration": 7982,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Select Individual account type\nselectAccountType('Individual');\n// Try submitting without filling anything\ncy.get('button[type=\"submit\"]').contains('Continue').click();\ncy.wait(2000);\n// Submit\ncy.get('button[type=\"submit\"]').contains('Continue').click();\n// Assert validation messages for all required fields\n// cy.get('select[name=\"accountType\"]')\n//     .parent()\n//     .find(\".text-red-500\")\n//     .should(\"contain.text\", \"Required\");\ncy.get('input[name=\"names\"]')\n    .parent()\n    .find(\".text-red-500\")\n    .should(\"contain.text\", \"Required\");\ncy.get('input[name=\"phone_number\"]')\n    .parent()\n    .parent()\n    .find(\".text-red-500\")\n    .should(\"contain.text\", \"Required\");\ncy.get('input[name=\"identification_number\"]')\n    .parent()\n    .find(\".text-red-500\")\n    .should(\"contain.text\", \"Required\");",
              "err": {},
              "uuid": "b4d57f5a-2607-4bfa-a83f-3f3c7f254091",
              "parentUUID": "ebfe2b90-3899-4d9e-989c-d5a503f07b8c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should fillout the form with valid data",
              "fullTitle": "MPost Registration Page Tests Should fillout the form with valid data",
              "timedOut": null,
              "duration": 11155,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Select Individual account type\nselectAccountType('Company');\nselectAccountType('Individual');\n// Submit the form\ncy.get(\"form > div[class='flex gap-3 pt-4'] > button[type='submit']\").click();\n// Assert on the navigation to the personal details section\ncy.contains('Enter Personal Details').should('be.visible');\n// Fill out the form fields\nfillPersonalDetails();\n// Submit\ncy.get('button[type=\"submit\"]').contains('Continue').click();\n// Fill out the address details form\nfillAddressDetails();",
              "err": {},
              "uuid": "14149ec9-1e5a-498d-a59d-e445c0289814",
              "parentUUID": "ebfe2b90-3899-4d9e-989c-d5a503f07b8c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should show change the page body when selecting a valid account type - Business",
              "fullTitle": "MPost Registration Page Tests Should show change the page body when selecting a valid account type - Business",
              "timedOut": null,
              "duration": 4900,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "selectAccountType('Individual');",
              "err": {},
              "uuid": "1f8b254e-4a4c-4bb9-918f-c31634e0dcea",
              "parentUUID": "ebfe2b90-3899-4d9e-989c-d5a503f07b8c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should validate email format",
              "fullTitle": "MPost Registration Page Tests should validate email format",
              "timedOut": null,
              "duration": 10025,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "selectAccountType('Individual');\n// Submit the form\ncy.get('button[type=\"submit\"]').contains('Continue').click();\ncy.wait(2000);\n// Fill Full Name\ncy.get('input[name=\"names\"]')\n    .should('have.attr', 'placeholder', 'Full Name')\n    .type('Paul Bakana')\n    .should('have.value', 'Paul Bakana');\ncy.get('input[name=\"phone_number\"]')\n    .clear()\n    .type('+250 788 123 456')\n    .should('have.value', '+250 788 123 456');\n// open dropdown and select Passport\ncy.get('#identification_type')\n    .click({ force: true });\ncy.get('.ant-select-dropdown')\n    .contains('Passport')\n    .click();\n// Fill Identification Number\ncy.get('input[name=\"identification_number\"]')\n    .type('AB1234567')\n    .should('have.value', 'AB1234567');\n// Fill Invalid Email\ncy.get('input[name=\"email\"]')\n    .type('invalidEmail')\n    .should('have.value', 'invalidEmail');\n// Submit\ncy.get('button[type=\"submit\"]').click();\n// Assert for invalid email message\ncy.get('input[name=\"email\"] + div.text-red-500')\n    .should(\"contain.text\", \"Invalid email format\");",
              "err": {},
              "uuid": "dcc33dab-9625-4f32-8b41-d25ee6c277e9",
              "parentUUID": "ebfe2b90-3899-4d9e-989c-d5a503f07b8c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should redirect to sign-in page when clicking \"Sign In\"",
              "fullTitle": "MPost Registration Page Tests should redirect to sign-in page when clicking \"Sign In\"",
              "timedOut": null,
              "duration": 5424,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains(\"Sign in\").should(\"be.visible\").click();\ncy.url().should('include', '/auth/login');",
              "err": {},
              "uuid": "3684febd-e1b9-4cc4-a78a-4ce5c88221f2",
              "parentUUID": "ebfe2b90-3899-4d9e-989c-d5a503f07b8c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4f5a5ae4-cbf0-4dff-8d8d-739b7c00ef25",
            "3dcf4521-afb4-43a2-bc67-dd355d7ab18c",
            "b4d57f5a-2607-4bfa-a83f-3f3c7f254091",
            "14149ec9-1e5a-498d-a59d-e445c0289814",
            "1f8b254e-4a4c-4bb9-918f-c31634e0dcea",
            "dcc33dab-9625-4f32-8b41-d25ee6c277e9",
            "3684febd-e1b9-4cc4-a78a-4ce5c88221f2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 52195,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f74b1206-afa3-4929-ab38-70fa246645da",
      "title": "",
      "fullFile": "cypress\\e2e\\MPost\\aboutUsPage.cy.ts",
      "file": "cypress\\e2e\\MPost\\aboutUsPage.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ecf5842e-8c49-4c73-aca6-da3c743a53a3",
          "title": "MPost About Us Page - Test Case 1",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should assert the page title",
              "fullTitle": "MPost About Us Page - Test Case 1 should assert the page title",
              "timedOut": null,
              "duration": 7327,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// assert the page title\ncy.title().should('eq', 'MPost - Exchange Anything. Anytime. Anywhere.');\n// assert the meta description content\ncy.get('head meta[name=\"description\"]').should('have.attr', 'content', 'MPost - Join millions of individuals and businesses using MPOST as their universal digital address—enabling secure mail and parcel delivery, hassle-free returns for online shoppers, and seamless identity verification for both local and global transactions.');\n// assert \"ABOUT US\" heading visibility\ncy.contains('h1', 'ABOUT US').should('be.visible');\n// assert the mission description visibility\ncy.contains('Learn more about MPost and our mission to provide universal digital addresses.').should('be.visible');",
              "err": {},
              "uuid": "39cc2fb0-b58f-4225-872e-49014f49e3d8",
              "parentUUID": "ecf5842e-8c49-4c73-aca6-da3c743a53a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should should navigate the whole page",
              "fullTitle": "MPost About Us Page - Test Case 1 should should navigate the whole page",
              "timedOut": null,
              "duration": 4662,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Scroll to Company Profile visibility\ncy.contains('h2', 'COMPANY PROFILE').scrollIntoView().should('be.visible');\n// assert vision and mission visibility\ncy.contains('h2', 'Vision').scrollIntoView().should('be.visible');\ncy.contains('h2', 'Mission').scrollIntoView().should('be.visible');\n// assert core values visibility\ncy.contains('h2', 'Enabling E-commerce, KYC Address Verification, and Seamless Delivery')\n    .scrollIntoView()\n    .should('be.visible');\n// assert \"Our Solutions and Policies\" section visibility\ncy.contains('h2', 'Our Solutions and Policies').scrollIntoView().should('be.visible');\n// Assert presence of button and links\ncy.contains('button', 'View Solutions').should('be.visible');\ncy.contains('a', 'User Terms and Conditions').should('be.visible');\ncy.contains('a', 'Our Privacy Policy').should('be.visible');",
              "err": {},
              "uuid": "4de23708-8aea-4c3b-882c-4154a0ae8ff2",
              "parentUUID": "ecf5842e-8c49-4c73-aca6-da3c743a53a3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "39cc2fb0-b58f-4225-872e-49014f49e3d8",
            "4de23708-8aea-4c3b-882c-4154a0ae8ff2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11989,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "caf7f927-216b-4198-8c10-3aa485a73bfa",
      "title": "",
      "fullFile": "cypress\\e2e\\MPost\\home.cy.ts",
      "file": "cypress\\e2e\\MPost\\home.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2e98535e-08d7-411c-bc77-02ac5328c510",
          "title": "Automation Test of MPost website",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify Home Page loads successfully and SEO Tags",
              "fullTitle": "Automation Test of MPost website Verify Home Page loads successfully and SEO Tags",
              "timedOut": null,
              "duration": 11798,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Assert on the presence of the main header\ncy.get(\"nav\").should(\"be.visible\");\n// cy.get(\" div[class='hidden md:flex space-x-8']\").should(\"be.visible\");\n// Assert the title of the page\ncy.title().should(\"eq\", \"MPost - Exchange Anything. Anytime. Anywhere.\");\n// Assert the meta description of the page\ncy.get('head meta[name=\"description\"]')\n    .should(\"have.attr\", \"content\")\n    .and(\"eq\", \"MPost - Join millions of individuals and businesses using MPOST as their universal digital address—enabling secure mail and parcel delivery, hassle-free returns for online shoppers, and seamless identity verification for both local and global transactions.\");\n// Assert on the presence of the logo\ncy.get(\"div[class='flex items-center'] > a[class='text-2xl font-bold text-white flex items-center']\").should(\"be.visible\");\n// Assert on the “Get Your Address” button\ncy.get(\"div[class='space-y-8'] > a[href='/auth/registration']\")\n    .should(\"be.visible\")\n    .and(\"contain.text\", \"Get Your Address\").click();\ncy.wait(2000);\n// Assert on the redirection to the registration page\ncy.url().should(\"eq\", \"https://staging.mpost.global/auth/registration\");",
              "err": {},
              "uuid": "b48d2862-ec10-4895-9d97-13aed17f213a",
              "parentUUID": "2e98535e-08d7-411c-bc77-02ac5328c510",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display all partner logos correctly  and the footer",
              "fullTitle": "Automation Test of MPost website should display all partner logos correctly  and the footer",
              "timedOut": null,
              "duration": 5446,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Validate Global Challenge Section\ncy.contains(\"The Global Challenge\").should(\"be.visible\").scrollIntoView();\ncy.get(\"img\").first().should(\"be.visible\");\n// Scroll to the footer\ncy.scrollTo(\"bottom\");\ncy.contains(\"Trusted by industry leading global companies\").should(\"be.visible\");\ncy.get(\"img[alt='Samurai Incubate Africa']\")\n    .should(\"be.visible\")\n    .and(\"have.attr\", \"src\")\n    .and(\"include\", \"samurai-incubate-africa.png\");\n// Techstars\ncy.get(\"img[alt='Techstars']\")\n    .should(\"be.visible\")\n    .and(\"have.attr\", \"src\")\n    .and(\"include\", \"techstars.png\");\n// Startup Bootcamp\ncy.get(\"img[alt='Startup Bootcamp']\")\n    .should(\"be.visible\")\n    .and(\"have.attr\", \"src\")\n    .and(\"include\", \"startup-bootcamp.png\");\n// Expert Dojo\ncy.get(\"img[alt='Expert Dojo']\")\n    .should(\"be.visible\")\n    .and(\"have.attr\", \"src\")\n    .and(\"include\", \"expert-dojo.png\");\n// Validate Footer Contact Details\n// cy.get(\"footer\").within(() => {\ncy.contains(\"Our Locations\").should(\"be.visible\");\ncy.contains(\"info@mpost.africa\").should(\"be.visible\");\ncy.contains(\"+250791 954 939\").should(\"be.visible\");\ncy.contains(\"0208000631\").should(\"be.visible\");\ncy.contains(\"Rwanda - Headquarters\").should(\"be.visible\");\ncy.contains(\"Mpost Kenya\").should(\"be.visible\");\n// });",
              "err": {},
              "uuid": "6c683232-447a-4464-9ddd-3390a01f8ddd",
              "parentUUID": "2e98535e-08d7-411c-bc77-02ac5328c510",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the MPost navigation menu links",
              "fullTitle": "Automation Test of MPost website Verify the MPost navigation menu links",
              "timedOut": null,
              "duration": 30274,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Assert on the banner’s visibility\ncy.get(\" div[class='hidden md:flex space-x-8']\")\n    .should(\"be.visible\")\n    .then((nav) => {\n    // Get all the links in the navigation menu\n    const links = nav.find(\"a\");\n    expect(links.length).to.equal(4);\n});\n// Define the expected URLs\nconst expectedUrls = [\n    \"https://staging.mpost.global/\",\n    \"https://staging.mpost.global/our-solution\",\n    \"https://staging.mpost.global/about-us\",\n    \"https://staging.mpost.global/partners\",\n];\n// Use a for loop to click on every URL and verify it\nfor (let i = 0; i < expectedUrls.length; i++) {\n    cy.visit(\"https://staging.mpost.global/\");\n    cy.get(\"div[class='hidden md:flex space-x-8']\")\n        .should(\"be.visible\")\n        .find(\"a\")\n        .eq(i)\n        .then(($link) => {\n        const href = $link.prop(\"href\");\n        expect(href).to.equal(expectedUrls[i]);\n        cy.wrap($link).invoke(\"removeAttr\", \"target\").click();\n        cy.wait(3000);\n    });\n    cy.url().should(\"eq\", expectedUrls[i]);\n    cy.wait(1000);\n}\n// Assert on the presence of the logo\ncy.get(\"div[class='flex items-center'] > a[class='text-2xl font-bold text-white flex items-center']\")\n    .should(\"be.visible\")\n    .click();",
              "err": {},
              "uuid": "42128590-156a-4f41-8709-c961225ddbe4",
              "parentUUID": "2e98535e-08d7-411c-bc77-02ac5328c510",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should navigate the page using the Bottom Navigation bar buttons",
              "fullTitle": "Automation Test of MPost website Should navigate the page using the Bottom Navigation bar buttons",
              "timedOut": null,
              "duration": 60489,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Step-3: Scroll to Geolocation section and validate its elements\ncy.get(\"div[class='relative h-full flex justify-center flex-col max-w-[600px] mx-auto lg:mx-0'] div[class='relative']\")\n    .scrollIntoView()\n    .should(\"be.visible\");\n// Assert on the Real time text delivery availability\ncy.get(\"div[class='relative h-full flex justify-center flex-col max-w-[600px] mx-auto lg:mx-0']\").contains(\"REAL-TIME DELIVERY ALERTS\");\n// Assert on the paragraph text below the Real time text delivery availability\ncy.get(\"h2[class='text-primary text-2xl sm:text-3xl lg:text-4xl font-bold leading-tight']\").should(\"be.visible\");\n// Step-2: Validate the Navigation buttons\ncy.get(\"div[class='absolute bottom-4 sm:bottom-6 lg:bottom-10 left-1/2 -translate-x-1/2 z-10'] > div[class='flex justify-center space-x-1 sm:space-x-2']\")\n    .should(\"be.visible\")\n    .then((buttonsList) => {\n    // Get all buttons in the navigation bottom banner\n    const buttons = buttonsList.find(\"button\");\n    cy.log(`List of Buttons  is: ${buttons}`);\n    expect(buttons.length).to.equal(6);\n});\n// Use a for loop to click on every button and verify it\nlet n = 6; // Number of buttons\nfor (let i = 1; i < n; i++) {\n    cy.get(\"div[class='absolute bottom-4 sm:bottom-6 lg:bottom-10 left-1/2 -translate-x-1/2 z-10'] > div[class='flex justify-center space-x-1 sm:space-x-2']\")\n        .should(\"be.visible\")\n        .find(\"button\")\n        .eq(i)\n        .then(($button) => {\n        const beforeColor = $button.css(\"background-color\");\n        cy.log(\"Before color: \" + beforeColor);\n        cy.wrap($button).click();\n        cy.wait(2000);\n        cy.get(\"div[class='absolute bottom-4 sm:bottom-6 lg:bottom-10 left-1/2 -translate-x-1/2 z-10'] > div[class='flex justify-center space-x-1 sm:space-x-2']\")\n            .find(\"button\")\n            .eq(i)\n            .then(($btnAfter) => {\n            const afterColor = $btnAfter.css(\"background-color\");\n            cy.log(\"After color: \" + afterColor);\n            expect(afterColor, \"Highlight color should change\").to.not.eq(beforeColor);\n        });\n    });\n    cy.wait(1000);\n}",
              "err": {
                "message": "CypressError: Timed out after waiting `60000ms` for your remote page to load.\n\nYour page did not fire its `load` event within `60000ms`.\n\nYou can try increasing the `pageLoadTimeout` value in `cypress.config.ts` to wait longer.\n\nBrowsers will not fire the `load` event until all stylesheets and scripts are done downloading.\n\nWhen this `load` event occurs, Cypress will continue running commands.\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Automation Test of MPost we...`",
                "estack": "CypressError: Timed out after waiting `60000ms` for your remote page to load.\n\nYour page did not fire its `load` event within `60000ms`.\n\nYou can try increasing the `pageLoadTimeout` value in `cypress.config.ts` to wait longer.\n\nBrowsers will not fire the `load` event until all stylesheets and scripts are done downloading.\n\nWhen this `load` event occurs, Cypress will continue running commands.\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Automation Test of MPost we...`\n    at timedOutWaitingForPageLoad (https://staging.mpost.global/__cypress/runner/cypress_runner.js:134221:64)\n    at <unknown> (https://staging.mpost.global/__cypress/runner/cypress_runner.js:135215:16)\n    at tryCatcher (https://staging.mpost.global/__cypress/runner/cypress_runner.js:1777:23)\n    at <unknown> (https://staging.mpost.global/__cypress/runner/cypress_runner.js:4156:41)\n    at tryCatcher (https://staging.mpost.global/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (https://staging.mpost.global/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (https://staging.mpost.global/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromise0 (https://staging.mpost.global/__cypress/runner/cypress_runner.js:1591:10)\n    at Promise._settlePromises (https://staging.mpost.global/__cypress/runner/cypress_runner.js:1667:18)\n    at _drainQueueStep (https://staging.mpost.global/__cypress/runner/cypress_runner.js:2377:12)\n    at _drainQueue (https://staging.mpost.global/__cypress/runner/cypress_runner.js:2370:9)\n    at Async._drainQueues (https://staging.mpost.global/__cypress/runner/cypress_runner.js:2386:5)\n    at Async.drainQueues (https://staging.mpost.global/__cypress/runner/cypress_runner.js:2256:14)\nFrom Your Spec Code:\n    at Context.eval (webpack://testingwithcypress/./cypress/e2e/MPost/home.cy.ts:4:7)",
                "diff": null
              },
              "uuid": "5392c7b9-ad72-4cc5-a935-f8d5bb28c83f",
              "parentUUID": "2e98535e-08d7-411c-bc77-02ac5328c510",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should Navigate the MPost Home Page section per section",
              "fullTitle": "Automation Test of MPost website Should Navigate the MPost Home Page section per section",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Assert on the banner’s visibility\ncy.get(\"nav.bg-mpost-blue.text-white.py-4\").should(\"be.visible\");\n// Assert on the Hot sellers products section\ncy.get(\"h1[class='text-3xl md:text-4xl lg:text-5xl font-bold leading-tight']\")\n    .contains(\"Powering Universal Access and Exchange with a Universal Digital Address\")\n    .should(\"be.visible\");\n// Assert on the global navigation section\ncy.get(\".text-mpost-blue.text-2xl.font-normal.mb-4\").should(\"be.visible\");\n// // Assert on the paragraph text below the global title\ncy.get(\"p[class='text-xl sm:text-2xl font-light text-mpost-text-dark mb-4 sm:mb-6 text-left leading-relaxed']\").should(\"be.visible\");\n// Step-3: Scroll to Geolocation section and validate its elements\ncy.get(\"div[class='relative h-full flex justify-center flex-col max-w-[600px] mx-auto lg:mx-0'] div[class='relative']\")\n    .scrollIntoView()\n    .should(\"be.visible\");\n// Assert on the Real time text delivery availability\ncy.get(\"div[class='relative h-full flex justify-center flex-col max-w-[600px] mx-auto lg:mx-0']\").contains(\"REAL-TIME DELIVERY ALERTS\");\n// Assert on the paragraph text below the Real time text delivery availability\ncy.get(\"h2[class='text-primary text-2xl sm:text-3xl lg:text-4xl font-bold leading-tight']\").should(\"be.visible\");\n// Step-4: Scroll to Universal address section and validate its elements\ncy.get(\"div[class='relative h-full flex justify-center flex-col max-w-[600px] mx-auto lg:mx-0'] div[class='relative']\")\n    .scrollIntoView()\n    .should(\"be.visible\");\n// Assert on the Universal address text availability\ncy.get(\"div[class='relative h-full flex justify-center flex-col max-w-[600px] mx-auto lg:mx-0'] div[class='relative']\").contains(\"A UNIVERSAL ADDRESS\");\n// Assert on the paragraph text below the Universal address title\ncy.get(\"h2[class='text-primary text-2xl sm:text-3xl lg:text-4xl font-bold leading-tight']\").contains(\"Never lose a delivery again, no matter where life takes you.\");\n//Step-5: Scroll to Geolocation section and validate its elements\ncy.get(\"div[class='relative h-full flex justify-center flex-col max-w-[600px] mx-auto lg:mx-0'] div[class='relative']\")\n    .scrollIntoView()\n    .should(\"be.visible\");\ncy.get(\"div[class='relative h-full flex justify-center flex-col max-w-[600px] mx-auto lg:mx-0'] div[class='relative']\").should(\"be.visible\");\ncy.wait(2000);\n// Assert on the Geolocation text availability\ncy.get(\"div[class='relative h-full flex justify-center flex-col max-w-[600px] mx-auto lg:mx-0'] div[class='relative']\").contains(\"GEOLOCATION\");\n// Assert on the paragraph text below the Universal address title\ncy.get(\"h2[class='text-primary text-2xl sm:text-3xl lg:text-4xl font-bold leading-tight']\").contains(\"You're always in control of where your deliveries go.\");\n// //Step-6: Navigate to Parcel Locker section\ncy.get(\"div[class='relative h-full flex justify-center flex-col max-w-[600px] mx-auto lg:mx-0'] div[class='relative']\")\n    .scrollIntoView()\n    .should(\"be.visible\");\n// Assert on the Geolocation text availability\ncy.get(\"div[class='relative h-full flex justify-center flex-col max-w-[600px] mx-auto lg:mx-0'] div[class='relative']\").contains(\"PARCEL LOCKERS\");\n// Assert on the paragraph text below the Universal address title\ncy.get(\"h2[class='text-primary text-2xl sm:text-3xl lg:text-4xl font-bold leading-tight']\").contains(\"You're always in control of where your deliveries go.\");",
              "err": {},
              "uuid": "563e7a95-961a-4591-846e-11ab1824d9bc",
              "parentUUID": "2e98535e-08d7-411c-bc77-02ac5328c510",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [
            "b48d2862-ec10-4895-9d97-13aed17f213a",
            "6c683232-447a-4464-9ddd-3390a01f8ddd",
            "42128590-156a-4f41-8709-c961225ddbe4"
          ],
          "failures": [
            "5392c7b9-ad72-4cc5-a935-f8d5bb28c83f"
          ],
          "pending": [],
          "skipped": [
            "563e7a95-961a-4591-846e-11ab1824d9bc"
          ],
          "duration": 108007,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "579ee147-54ab-43e8-bead-8c8222720b8a",
      "title": "",
      "fullFile": "cypress\\e2e\\MPost\\ourSolutionPage.cy.ts",
      "file": "cypress\\e2e\\MPost\\ourSolutionPage.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "07542987-652c-4056-8bff-11fefc3bed04",
          "title": "MPost Our Solution Page Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should load page and display main elements",
              "fullTitle": "MPost Our Solution Page Tests should load page and display main elements",
              "timedOut": null,
              "duration": 10272,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Assert page title\ncy.title().should(\"include\", \"MPost - Say Goodbye to Unverifiable Addresses and Frustrating Deliveries\");\ncy.get(\"meta[name='description']\").should(\"have.attr\", \"content\", \"Whether you're an individual, a business, or a government agency, MPost helps you connect, deliver, and grow, anywhere, anytime.\");\n// Assert page heading\ncy.contains(\"h1\", \"OUR SOLUTIONS\").should(\"be.visible\");\n// Assert page description\ncy.contains(\"Say Goodbye to Unverifiable Addresses and Frustrating Deliveries\").should(\"be.visible\");\n// Assert presence of buttons\ncy.contains(\"button\", \"Get Your Digital Address\").should(\"be.visible\");\ncy.contains(\"button\", \"Partner With Us\").should(\"be.visible\");",
              "err": {},
              "uuid": "554cad98-c630-4c9b-91c8-9e74bb90e237",
              "parentUUID": "07542987-652c-4056-8bff-11fefc3bed04",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should scroll to 'Solutions' and validate each left navigation item",
              "fullTitle": "MPost Our Solution Page Tests should scroll to 'Solutions' and validate each left navigation item",
              "timedOut": null,
              "duration": 6724,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Scroll to Solutions heading\ncy.contains(\"h3\", \"Solutions\").scrollIntoView().should(\"be.visible\");\n// Navigation list assertions\nconst navItems = [\n    \"Individuals & Small Businesses\",\n    \"Postal Authorities\",\n    \"Financial Institutions\",\n    \"E-commerce & Logistics\",\n    \"Coming Soon\",\n    \"Why MPost?\",\n];\nnavItems.forEach((item) => {\n    cy.contains(\"li\", item).should(\"be.visible\").click();\n    // cy.contains(\"h2, h3\", item.split(\" \")[0]).should(\"be.visible\"); \n});",
              "err": {},
              "uuid": "cbb84fd9-54d9-4dfd-838a-613660141314",
              "parentUUID": "07542987-652c-4056-8bff-11fefc3bed04",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display the 'Join thousands...' section and buttons",
              "fullTitle": "MPost Our Solution Page Tests should display the 'Join thousands...' section and buttons",
              "timedOut": null,
              "duration": 5700,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Navigate to the section\ncy.contains(\"Join thousands already using MPost to simplify their lives, grow their businesses, and expand their reach.\")\n    .scrollIntoView()\n    .should(\"be.visible\");\n// Assert buttons\ncy.contains(\"button\", \"Get Your Digital Address\").should(\"be.visible\");\ncy.contains(\"button\", \"Partner With Us\").should(\"be.visible\");",
              "err": {},
              "uuid": "fe885473-b1b7-44f8-bdac-19e63f63430c",
              "parentUUID": "07542987-652c-4056-8bff-11fefc3bed04",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "554cad98-c630-4c9b-91c8-9e74bb90e237",
            "cbb84fd9-54d9-4dfd-838a-613660141314",
            "fe885473-b1b7-44f8-bdac-19e63f63430c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 22696,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "40729a00-6705-44ef-8095-18c6ea743195",
      "title": "",
      "fullFile": "cypress\\e2e\\MPost\\partnerWithUs.cy.ts",
      "file": "cypress\\e2e\\MPost\\partnerWithUs.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1c1d0365-f80d-41a5-890e-b8e66de245bc",
          "title": "MPost Partner With Us Page Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should load page and display main elements",
              "fullTitle": "MPost Partner With Us Page Tests should load page and display main elements",
              "timedOut": null,
              "duration": 12553,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Assert page title\ncy.title().should(\"eq\", \"MPost - Exchange Anything. Anytime. Anywhere.\");\ncy.get(\"meta[name='description']\").should(\"have.attr\", \"content\", \"MPost - Join millions of individuals and businesses using MPOST as their universal digital address—enabling secure mail and parcel delivery, hassle-free returns for online shoppers, and seamless identity verification for both local and global transactions.\");\n// Assert page heading\ncy.contains(\"h1\", \"PARTNER WITH US\").should(\"be.visible\");\n// Assert page description\ncy.contains(\"Join us in building Africa's digital addressing infrastructure and unlock new opportunities for growth.\").should(\"be.visible\");\n// Assert presence of buttons\ncy.contains(\"Why Partner with MPost?\").should(\"be.visible\").scrollIntoView();\ncy.contains(\"Our Partnership Models\").should(\"be.visible\");\ncy.contains(\"Let's Work Together\").should(\"be.visible\").scrollIntoView();",
              "err": {},
              "uuid": "177bcf79-fca8-4347-b074-9e8b590b592c",
              "parentUUID": "1c1d0365-f80d-41a5-890e-b8e66de245bc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should validate input fields of the partners form",
              "fullTitle": "MPost Partner With Us Page Tests should validate input fields of the partners form",
              "timedOut": null,
              "duration": 15693,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains(\"Partnership Inquiry\")\n    .scrollIntoView()\n    .should(\"be.visible\");\n// cy.contains(\"button\", \"Submit\").click();\ncy.get(\"input#name\").should(\"be.visible\").and(\"have.attr\", \"placeholder\", \"Enter your full name\");\ncy.get(\"input#email\").should(\"be.visible\").and(\"have.attr\", \"placeholder\", \"Enter your email address\");\ncy.get(\"input#company\").should(\"be.visible\").and(\"have.attr\", \"placeholder\", \"Enter your company name\");\ncy.get(\"input#role\").should(\"be.visible\").and(\"have.attr\", \"placeholder\", \"Enter your role or title\");\n// Dropdown (Partnership Field)\ncy.get(\"#partnershipField\").should(\"exist\"); // input inside Ant Design select\ncy.contains(\"span\", \"Select partnership field\").should(\"be.visible\");\n// Monthly Users field\ncy.get(\"input#monthlyUsers\")\n    .should(\"be.visible\")\n    .and(\"have.attr\", \"placeholder\", \"e.g., 10,000 or 50K-100K\");\n// Message textarea\ncy.get(\"textarea#message\")\n    .should(\"be.visible\")\n    .and(\"have.attr\", \"placeholder\")\n    .and(\"include\", \"Tell us about your partnership interest\");\n// Submit button\ncy.contains(\"button span\", \"Send Partnership Inquiry\")\n    .should(\"be.visible\")\n    .and(\"not.be.disabled\");",
              "err": {},
              "uuid": "d054d9b4-cadc-4f6c-90c6-854e30e4e750",
              "parentUUID": "1c1d0365-f80d-41a5-890e-b8e66de245bc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display error message when submiting an empty partners form",
              "fullTitle": "MPost Partner With Us Page Tests should display error message when submiting an empty partners form",
              "timedOut": null,
              "duration": 5306,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains(\"Partnership Inquiry\")\n    .scrollIntoView()\n    .should(\"be.visible\");\ncy.contains(\"button span\", \"Send Partnership Inquiry\").click();\n// Assert that each required field displays the \"Required\" message\nconst requiredFields = [\n    \"#name\",\n    \"#email\",\n    \"#company\",\n    \"#role\",\n    // \"#partnershipField\",\n    \"#monthlyUsers\",\n    \"#message\"\n];\nrequiredFields.forEach((selector) => {\n    cy.get(selector)\n        .siblings(\"div[class='text-red-500 text-sm']\").contains(\"Required\").should(\"be.visible\");\n    // .within(() => {\n    //     cy.contains(\"Required\").should(\"be.visible\");\n    // });\n});",
              "err": {},
              "uuid": "7455265b-43e4-4a81-a047-4c7e74fd896c",
              "parentUUID": "1c1d0365-f80d-41a5-890e-b8e66de245bc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fill out and submit the partners form with valid data",
              "fullTitle": "MPost Partner With Us Page Tests should fill out and submit the partners form with valid data",
              "timedOut": null,
              "duration": 12906,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains(\"Partnership Inquiry\")\n    .scrollIntoView()\n    .should(\"be.visible\");\n// cy.contains(\"button\", \"Submit\").click();\ncy.get(\"input#name\").should(\"be.visible\").and(\"have.attr\", \"placeholder\", \"Enter your full name\").type(\"Khan Chris\");\ncy.get(\"input#email\").should(\"be.visible\").and(\"have.attr\", \"placeholder\", \"Enter your email address\").type(\"khan.chris@example.com\");\ncy.get(\"input#company\").should(\"be.visible\").and(\"have.attr\", \"placeholder\", \"Enter your company name\").type(\"Chris Company\");\ncy.get(\"input#role\").should(\"be.visible\").and(\"have.attr\", \"placeholder\", \"Enter your role or title\").type(\"Partnership Manager\");\n// Select an option from the dropdown (Partnership Field)\ncy.get(\"#partnershipField\").click({ force: true });\n// Select the option \"Banks & Fintechs\"\ncy.contains(\".ant-select-dropdown .ant-select-item\", \"Banks & Fintechs\")\n    .click({ force: true });\n// Assert that the value is selected\ncy.get(\".ant-select-selector\").should(\"contain.text\", \"Banks & Fintechs\");\n// Monthly Users field\ncy.get(\"input#monthlyUsers\")\n    .should(\"be.visible\")\n    .and(\"have.attr\", \"placeholder\", \"e.g., 10,000 or 50K-100K\").type(\"50K-100K\");\n// Message textarea\ncy.get(\"textarea#message\").type(\"We are interested in partnering with MPost to enhance our delivery services.\");\n// Submit button\ncy.contains(\"button span\", \"Send Partnership Inquiry\")\n    .should(\"be.visible\")\n    .and(\"not.be.disabled\");",
              "err": {},
              "uuid": "a5110bf1-832a-45c6-945e-2260b36f5d23",
              "parentUUID": "1c1d0365-f80d-41a5-890e-b8e66de245bc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "177bcf79-fca8-4347-b074-9e8b590b592c",
            "d054d9b4-cadc-4f6c-90c6-854e30e4e750",
            "7455265b-43e4-4a81-a047-4c7e74fd896c",
            "a5110bf1-832a-45c6-945e-2260b36f5d23"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 46458,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "959f1fe6-4809-44f4-a03f-03c53434736d",
      "title": "",
      "fullFile": "cypress\\e2e\\MPost\\LoginPage.cy.ts",
      "file": "cypress\\e2e\\MPost\\LoginPage.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "de0f21b5-5c7d-40a0-a3de-c9013a0bea50",
          "title": "MPost Login Page",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should load the Login Page successfully",
              "fullTitle": "MPost Login Page Should load the Login Page successfully",
              "timedOut": null,
              "duration": 11307,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains(\"h2\", \"Login to your account\").should(\"be.visible\");\n// Click on the Login button\ncy.get(\"button[type='submit']\").contains(\"Sign In\").click();\n// Assert on the redirection to the login page\ncy.url().should(\"eq\", \"https://staging.mpost.global/auth/login\");\ncy.wait(2000);\n// Assert on the presence of required fields\ncy.get(\"input[type='email']\").should(\"be.visible\");\ncy.get(\"input[id='password']\").should(\"be.visible\");\ncy.get(\"button[type='submit']\").should(\"be.visible\");\ncy.contains(\"Sign up\").should(\"be.visible\");\ncy.contains(\"Forgot password?\").should(\"be.visible\");",
              "err": {},
              "uuid": "8327e3dc-c4fb-47ca-80e5-1b98f1324e7f",
              "parentUUID": "de0f21b5-5c7d-40a0-a3de-c9013a0bea50",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should validate empty field of the form",
              "fullTitle": "MPost Login Page should validate empty field of the form",
              "timedOut": null,
              "duration": 5040,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//  Assert the presence of the text \"Login to your account\"\ncy.contains(\"h2\", \"Login to your account\").should(\"be.visible\");\n// Select the \"Email\" option and click on it\ncy.contains(\"button\", \"Email\").should(\"be.visible\").click();\n// Click \"Sign In\" without filling the form \ncy.contains(\"button\", \"Sign In\").click();\n// Assert validation messages for required fields\ncy.get(\"div.text-red-500.text-sm\")\n    .should(\"have.length.at.least\", 1)\n    .each(($el) => {\n    cy.wrap($el).should(\"contain.text\", \"Required\");\n});\n// Assert the presence of \"Forgot password?\" link\ncy.contains(\"a\", \"Forgot password?\")\n    .should(\"be.visible\")\n    .and(\"have.attr\", \"href\", \"/auth/forgot-password\");",
              "err": {},
              "uuid": "3f1d9b37-7b7e-4ec3-9b4b-64583fc8b83f",
              "parentUUID": "de0f21b5-5c7d-40a0-a3de-c9013a0bea50",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show error message for invalid email",
              "fullTitle": "MPost Login Page should show error message for invalid email",
              "timedOut": null,
              "duration": 5338,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Type invalid email into email input\ncy.get(\"input[name='identifier']\").type(\"Invalidemail\");\n// Type some password \ncy.get(\"input[name='password']\").type(\"randomPassword\");\n// Click Sign In\ncy.contains(\"button\", \"Sign In\").click();\n// Assert error message appears\ncy.get(\"div.text-red-500.text-sm\")\n    .should(\"be.visible\")\n    .and(($el) => {\n    const text = $el.text();\n    expect(text).to.satisfy((t) => t.includes(\"Invalid email format\") || t.includes(\"Required\"));\n});",
              "err": {},
              "uuid": "695a6429-ad45-4e33-9412-61570792e097",
              "parentUUID": "de0f21b5-5c7d-40a0-a3de-c9013a0bea50",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should allow phone number login and validate empty submission",
              "fullTitle": "MPost Login Page should allow phone number login and validate empty submission",
              "timedOut": null,
              "duration": 8560,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// 1. Click on Phone Number tab\ncy.contains(\"button\", \"Phone Number\").click();\n// 2. Assert the presence of the phone number input field\ncy.get(\"input[name='identifier'][type='tel']\")\n    .should(\"exist\")\n    .and(\"be.visible\")\n    .and(\"have.attr\", \"placeholder\", \"Enter your phone number\");\ncy.wait(4000);\n// 3. Assert the presence of the country code select\ncy.get(\"select[name='identifierCountry']\")\n    .should(\"exist\");\n// 4. Click \"Sign In\" without filling phone number\ncy.contains(\"button span\", \"Sign In\").click();\n// 5. Assert the error message \"Required\"\ncy.get(\"div.text-red-500.text-sm\")\n    .should(\"be.visible\")\n    .and(\"contain.text\", \"Required\");",
              "err": {},
              "uuid": "ab6e08bb-8596-4604-a4f9-73b65af27bad",
              "parentUUID": "de0f21b5-5c7d-40a0-a3de-c9013a0bea50",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display all Forgot Password elements correctly",
              "fullTitle": "MPost Login Page should display all Forgot Password elements correctly",
              "timedOut": null,
              "duration": 7149,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on the \"Forgot password?\" link\ncy.contains(\"a\", \"Forgot password?\")\n    .should(\"be.visible\")\n    .and(\"have.attr\", \"href\", \"/auth/forgot-password\").click();\n// Assert presence of the text \"Forgot Password\"\ncy.contains(\"Forgot Password\").should(\"be.visible\");\n// Assert presence of the buttons \"Email\" and \"Phone Number\"\ncy.contains(\"button\", \"Email\").should(\"exist\").and(\"be.visible\");\ncy.contains(\"button\", \"Phone Number\").should(\"exist\").and(\"be.visible\");\n// Assert presence of the email input field\ncy.get(\"input[name='identifier']\")\n    .should(\"exist\")\n    .and(\"be.visible\")\n    .and(\"have.attr\", \"placeholder\", \"Enter your email\");\n// Assert presence of the \"Send Reset Instructions\" button\ncy.contains(\"button span\", \"Send Reset Instructions\")\n    .should(\"exist\")\n    .and(\"be.visible\");",
              "err": {},
              "uuid": "44047447-1ba8-47a9-8297-f16aa177056f",
              "parentUUID": "de0f21b5-5c7d-40a0-a3de-c9013a0bea50",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display confirmation message and allow return to login",
              "fullTitle": "MPost Login Page should display confirmation message and allow return to login",
              "timedOut": null,
              "duration": 16790,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on the \"Forgot password?\" link\ncy.contains(\"a\", \"Forgot password?\")\n    .should(\"be.visible\")\n    .and(\"have.attr\", \"href\", \"/auth/forgot-password\").click();\ncy.wait(3000);\n// Fill in a valid email address\ncy.get(\"input[name='identifier']\")\n    .should(\"exist\")\n    .and(\"be.visible\")\n    .type(\"irachriskhan@gmail.com\");\ncy.get(\"button[type='submit']\").click();\ncy.wait(3000);\n// Assert presence of the text \"Password Reset Email Sent\"\ncy.contains(\"h3\", \"Password Reset Email Sent\")\n    .should(\"exist\")\n    .and(\"be.visible\");\n// Assert presence of the \"Return to login\" link\ncy.contains(\"a\", \"Return to login\")\n    .should(\"exist\")\n    .and(\"be.visible\")\n    .and(\"have.attr\", \"href\", \"/auth/login\");\n// 3. Assert redirection to login page if clicked\ncy.contains(\"a\", \"Return to login\").click();\ncy.url().should(\"include\", \"/auth/login\");\n// Optional: confirm login heading exists on redirected page\ncy.contains(\"h2\", \"Login to your account\").should(\"be.visible\");",
              "err": {},
              "uuid": "93a14063-588c-4629-94c5-d9355fa94e65",
              "parentUUID": "de0f21b5-5c7d-40a0-a3de-c9013a0bea50",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8327e3dc-c4fb-47ca-80e5-1b98f1324e7f",
            "3f1d9b37-7b7e-4ec3-9b4b-64583fc8b83f",
            "695a6429-ad45-4e33-9412-61570792e097",
            "ab6e08bb-8596-4604-a4f9-73b65af27bad",
            "44047447-1ba8-47a9-8297-f16aa177056f",
            "93a14063-588c-4629-94c5-d9355fa94e65"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 54184,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "884cc38e-c13f-4b2b-9c71-b60290b05794",
      "title": "",
      "fullFile": "cypress\\e2e\\MPost\\RegistrationPage.cy.ts",
      "file": "cypress\\e2e\\MPost\\RegistrationPage.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e24e82f4-65e7-4dae-9553-296eedf6b74b",
          "title": "MPost Registration Page Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should load the registration page successfully",
              "fullTitle": "MPost Registration Page Tests should load the registration page successfully",
              "timedOut": null,
              "duration": 18480,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('include', '/auth/registration');\ncy.get(\"div > h1[class='text-xl sm:text-4xl md:text-5xl font-semibold mb-1 text-white text-center md:text-left']\").contains('Registration').should('be.visible');\ncy.get(\"form > div[class='flex gap-3 pt-4'] > button[type='submit']\").should('be.visible').contains('Continue');",
              "err": {},
              "uuid": "ebfbb391-2500-41fa-b113-4a51e4f757d0",
              "parentUUID": "e24e82f4-65e7-4dae-9553-296eedf6b74b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show validation error when submitting without selecting account type",
              "fullTitle": "MPost Registration Page Tests should show validation error when submitting without selecting account type",
              "timedOut": null,
              "duration": 5707,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"form > div[class='flex gap-3 pt-4'] > button[type='submit']\").click();\ncy.get(\"div[class='text-red-500 text-sm']\").contains('Required').should('be.visible');",
              "err": {},
              "uuid": "01254e11-0c08-4da0-a63a-c66747036d80",
              "parentUUID": "e24e82f4-65e7-4dae-9553-296eedf6b74b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show errors when required fields are empty",
              "fullTitle": "MPost Registration Page Tests should show errors when required fields are empty",
              "timedOut": null,
              "duration": 13663,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Select Individual account type\nselectAccountType('Individual');\n// Try submitting without filling anything\ncy.get('button[type=\"submit\"]').contains('Continue').click();\ncy.wait(2000);\n// Submit\ncy.get('button[type=\"submit\"]').contains('Continue').click();\n// Assert validation messages for all required fields\n// cy.get('select[name=\"accountType\"]')\n//     .parent()\n//     .find(\".text-red-500\")\n//     .should(\"contain.text\", \"Required\");\ncy.get('input[name=\"names\"]')\n    .parent()\n    .find(\".text-red-500\")\n    .should(\"contain.text\", \"Required\");\ncy.get('input[name=\"phone_number\"]')\n    .parent()\n    .parent()\n    .find(\".text-red-500\")\n    .should(\"contain.text\", \"Required\");\ncy.get('input[name=\"identification_number\"]')\n    .parent()\n    .find(\".text-red-500\")\n    .should(\"contain.text\", \"Required\");",
              "err": {},
              "uuid": "045acb1b-71f5-461d-a4c4-50d27a8f11c9",
              "parentUUID": "e24e82f4-65e7-4dae-9553-296eedf6b74b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should fillout the form with valid data",
              "fullTitle": "MPost Registration Page Tests Should fillout the form with valid data",
              "timedOut": null,
              "duration": 14926,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Select Individual account type\nselectAccountType('Company');\nselectAccountType('Individual');\n// Submit the form\ncy.get(\"form > div[class='flex gap-3 pt-4'] > button[type='submit']\").click();\n// Assert on the navigation to the personal details section\ncy.contains('Enter Personal Details').should('be.visible');\n// Fill out the form fields\nfillPersonalDetails();\n// Submit\ncy.get('button[type=\"submit\"]').contains('Continue').click();\n// Fill out the address details form\nfillAddressDetails();",
              "err": {},
              "uuid": "3f43f3ac-46f3-4cef-b4d1-faeece9d3489",
              "parentUUID": "e24e82f4-65e7-4dae-9553-296eedf6b74b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should show change the page body when selecting a valid account type - Business",
              "fullTitle": "MPost Registration Page Tests Should show change the page body when selecting a valid account type - Business",
              "timedOut": null,
              "duration": 8033,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "selectAccountType('Individual');",
              "err": {},
              "uuid": "3df6cd3f-db0e-424c-8803-e352248895ba",
              "parentUUID": "e24e82f4-65e7-4dae-9553-296eedf6b74b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should validate email format",
              "fullTitle": "MPost Registration Page Tests should validate email format",
              "timedOut": null,
              "duration": 12933,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "selectAccountType('Individual');\n// Submit the form\ncy.get('button[type=\"submit\"]').contains('Continue').click();\ncy.wait(2000);\n// Fill Full Name\ncy.get('input[name=\"names\"]')\n    .should('have.attr', 'placeholder', 'Full Name')\n    .type('Paul Bakana')\n    .should('have.value', 'Paul Bakana');\ncy.get('input[name=\"phone_number\"]')\n    .clear()\n    .type('+250 788 123 456')\n    .should('have.value', '+250 788 123 456');\n// open dropdown and select Passport\ncy.get('#identification_type')\n    .click({ force: true });\ncy.get('.ant-select-dropdown')\n    .contains('Passport')\n    .click();\n// Fill Identification Number\ncy.get('input[name=\"identification_number\"]')\n    .type('AB1234567')\n    .should('have.value', 'AB1234567');\n// Fill Invalid Email\ncy.get('input[name=\"email\"]')\n    .type('invalidEmail')\n    .should('have.value', 'invalidEmail');\n// Submit\ncy.get('button[type=\"submit\"]').click();\n// Assert for invalid email message\ncy.get('input[name=\"email\"] + div.text-red-500')\n    .should(\"contain.text\", \"Invalid email format\");",
              "err": {},
              "uuid": "e8bc4c3d-4c2b-4081-b40f-5beb371ade9f",
              "parentUUID": "e24e82f4-65e7-4dae-9553-296eedf6b74b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should redirect to sign-in page when clicking \"Sign In\"",
              "fullTitle": "MPost Registration Page Tests should redirect to sign-in page when clicking \"Sign In\"",
              "timedOut": null,
              "duration": 8694,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains(\"Sign in\").should(\"be.visible\").click();\ncy.url().should('include', '/auth/login');",
              "err": {},
              "uuid": "bad49492-036a-4ad1-8402-0dd1c893830f",
              "parentUUID": "e24e82f4-65e7-4dae-9553-296eedf6b74b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ebfbb391-2500-41fa-b113-4a51e4f757d0",
            "01254e11-0c08-4da0-a63a-c66747036d80",
            "045acb1b-71f5-461d-a4c4-50d27a8f11c9",
            "3f43f3ac-46f3-4cef-b4d1-faeece9d3489",
            "3df6cd3f-db0e-424c-8803-e352248895ba",
            "e8bc4c3d-4c2b-4081-b40f-5beb371ade9f",
            "bad49492-036a-4ad1-8402-0dd1c893830f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 82436,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "bd32b737-9495-43b9-ac16-b036d0b5a1e6",
      "title": "",
      "fullFile": "cypress\\e2e\\MPost\\aboutUsPage.cy.ts",
      "file": "cypress\\e2e\\MPost\\aboutUsPage.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "69582841-0d01-4cb1-a8d1-7a13350d3e45",
          "title": "MPost About Us Page - Test Case 1",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should assert the page title",
              "fullTitle": "MPost About Us Page - Test Case 1 should assert the page title",
              "timedOut": null,
              "duration": 20688,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// assert the page title\ncy.title().should('eq', 'MPost - Exchange Anything. Anytime. Anywhere.');\n// assert the meta description content\ncy.get('head meta[name=\"description\"]').should('have.attr', 'content', 'MPost - Join millions of individuals and businesses using MPOST as their universal digital address—enabling secure mail and parcel delivery, hassle-free returns for online shoppers, and seamless identity verification for both local and global transactions.');\n// assert \"ABOUT US\" heading visibility\ncy.contains('h1', 'ABOUT US').should('be.visible');\n// assert the mission description visibility\ncy.contains('Learn more about MPost and our mission to provide universal digital addresses.').should('be.visible');",
              "err": {},
              "uuid": "c7f899f0-8c1e-4dab-9b64-d1418efb5ea3",
              "parentUUID": "69582841-0d01-4cb1-a8d1-7a13350d3e45",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should should navigate the whole page",
              "fullTitle": "MPost About Us Page - Test Case 1 should should navigate the whole page",
              "timedOut": null,
              "duration": 12269,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Scroll to Company Profile visibility\ncy.contains('h2', 'COMPANY PROFILE').scrollIntoView().should('be.visible');\n// assert vision and mission visibility\ncy.contains('h2', 'Vision').scrollIntoView().should('be.visible');\ncy.contains('h2', 'Mission').scrollIntoView().should('be.visible');\n// assert core values visibility\ncy.contains('h2', 'Enabling E-commerce, KYC Address Verification, and Seamless Delivery')\n    .scrollIntoView()\n    .should('be.visible');\n// assert \"Our Solutions and Policies\" section visibility\ncy.contains('h2', 'Our Solutions and Policies').scrollIntoView().should('be.visible');\n// Assert presence of button and links\ncy.contains('button', 'View Solutions').should('be.visible');\ncy.contains('a', 'User Terms and Conditions').should('be.visible');\ncy.contains('a', 'Our Privacy Policy').should('be.visible');",
              "err": {},
              "uuid": "6bde6112-a55f-409c-b5a0-dcac01d1b121",
              "parentUUID": "69582841-0d01-4cb1-a8d1-7a13350d3e45",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c7f899f0-8c1e-4dab-9b64-d1418efb5ea3",
            "6bde6112-a55f-409c-b5a0-dcac01d1b121"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 32957,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "40097cde-4025-4f77-a9f2-7a6330bce651",
      "title": "",
      "fullFile": "cypress\\e2e\\MPost\\home.cy.ts",
      "file": "cypress\\e2e\\MPost\\home.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a569840c-95ec-4518-9ab2-d791cdfdbff8",
          "title": "Automation Test of MPost website",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify Home Page loads successfully and SEO Tags",
              "fullTitle": "Automation Test of MPost website Verify Home Page loads successfully and SEO Tags",
              "timedOut": null,
              "duration": 33205,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Assert on the presence of the main header\ncy.get(\"nav\").should(\"be.visible\");\n// cy.get(\" div[class='hidden md:flex space-x-8']\").should(\"be.visible\");\n// Assert the title of the page\ncy.title().should(\"eq\", \"MPost - Exchange Anything. Anytime. Anywhere.\");\n// Assert the meta description of the page\ncy.get('head meta[name=\"description\"]')\n    .should(\"have.attr\", \"content\")\n    .and(\"eq\", \"MPost - Join millions of individuals and businesses using MPOST as their universal digital address—enabling secure mail and parcel delivery, hassle-free returns for online shoppers, and seamless identity verification for both local and global transactions.\");\n// Assert on the presence of the logo\ncy.get(\"div[class='flex items-center'] > a[class='text-2xl font-bold text-white flex items-center']\").should(\"be.visible\");\n// Assert on the “Get Your Address” button\ncy.get(\"div[class='space-y-8'] > a[href='/auth/registration']\")\n    .should(\"be.visible\")\n    .and(\"contain.text\", \"Get Your Address\").click();\ncy.wait(2000);\n// Assert on the redirection to the registration page\ncy.url().should(\"eq\", \"https://staging.mpost.global/auth/registration\");",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: expected 'https://staging.mpost.global/' to equal 'https://staging.mpost.global/auth/registration'",
                "estack": "AssertionError: Timed out retrying after 4000ms: expected 'https://staging.mpost.global/' to equal 'https://staging.mpost.global/auth/registration'\n    at Context.eval (webpack://testingwithcypress/./cypress/e2e/MPost/home.cy.ts:37:13)",
                "diff": "- 'https://staging.mpost.global/'\n+ 'https://staging.mpost.global/auth/registration'\n"
              },
              "uuid": "714448f8-49e1-4d3f-90c9-c701aa021571",
              "parentUUID": "a569840c-95ec-4518-9ab2-d791cdfdbff8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display all partner logos correctly  and the footer",
              "fullTitle": "Automation Test of MPost website should display all partner logos correctly  and the footer",
              "timedOut": null,
              "duration": 10546,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Validate Global Challenge Section\ncy.contains(\"The Global Challenge\").should(\"be.visible\").scrollIntoView();\ncy.get(\"img\").first().should(\"be.visible\");\n// Scroll to the footer\ncy.scrollTo(\"bottom\");\ncy.contains(\"Trusted by industry leading global companies\").should(\"be.visible\");\ncy.get(\"img[alt='Samurai Incubate Africa']\")\n    .should(\"be.visible\")\n    .and(\"have.attr\", \"src\")\n    .and(\"include\", \"samurai-incubate-africa.png\");\n// Techstars\ncy.get(\"img[alt='Techstars']\")\n    .should(\"be.visible\")\n    .and(\"have.attr\", \"src\")\n    .and(\"include\", \"techstars.png\");\n// Startup Bootcamp\ncy.get(\"img[alt='Startup Bootcamp']\")\n    .should(\"be.visible\")\n    .and(\"have.attr\", \"src\")\n    .and(\"include\", \"startup-bootcamp.png\");\n// Expert Dojo\ncy.get(\"img[alt='Expert Dojo']\")\n    .should(\"be.visible\")\n    .and(\"have.attr\", \"src\")\n    .and(\"include\", \"expert-dojo.png\");\n// Validate Footer Contact Details\n// cy.get(\"footer\").within(() => {\ncy.contains(\"Our Locations\").should(\"be.visible\");\ncy.contains(\"info@mpost.africa\").should(\"be.visible\");\ncy.contains(\"+250791 954 939\").should(\"be.visible\");\ncy.contains(\"0208000631\").should(\"be.visible\");\ncy.contains(\"Rwanda - Headquarters\").should(\"be.visible\");\ncy.contains(\"Mpost Kenya\").should(\"be.visible\");\n// });",
              "err": {},
              "uuid": "ded8c7c2-ba89-4faf-8674-e31cf2d06484",
              "parentUUID": "a569840c-95ec-4518-9ab2-d791cdfdbff8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the MPost navigation menu links",
              "fullTitle": "Automation Test of MPost website Verify the MPost navigation menu links",
              "timedOut": null,
              "duration": 42043,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Assert on the banner’s visibility\ncy.get(\" div[class='hidden md:flex space-x-8']\")\n    .should(\"be.visible\")\n    .then((nav) => {\n    // Get all the links in the navigation menu\n    const links = nav.find(\"a\");\n    expect(links.length).to.equal(4);\n});\n// Define the expected URLs\nconst expectedUrls = [\n    \"https://staging.mpost.global/\",\n    \"https://staging.mpost.global/our-solution\",\n    \"https://staging.mpost.global/about-us\",\n    \"https://staging.mpost.global/partners\",\n];\n// Use a for loop to click on every URL and verify it\nfor (let i = 0; i < expectedUrls.length; i++) {\n    cy.visit(\"https://staging.mpost.global/\");\n    cy.get(\"div[class='hidden md:flex space-x-8']\")\n        .should(\"be.visible\")\n        .find(\"a\")\n        .eq(i)\n        .then(($link) => {\n        const href = $link.prop(\"href\");\n        expect(href).to.equal(expectedUrls[i]);\n        cy.wrap($link).invoke(\"removeAttr\", \"target\").click();\n        cy.wait(3000);\n    });\n    cy.url().should(\"eq\", expectedUrls[i]);\n    cy.wait(1000);\n}\n// Assert on the presence of the logo\ncy.get(\"div[class='flex items-center'] > a[class='text-2xl font-bold text-white flex items-center']\")\n    .should(\"be.visible\")\n    .click();",
              "err": {},
              "uuid": "ad44ae65-0a5e-40ce-bdd2-3686dfde96e0",
              "parentUUID": "a569840c-95ec-4518-9ab2-d791cdfdbff8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should navigate the page using the Bottom Navigation bar buttons",
              "fullTitle": "Automation Test of MPost website Should navigate the page using the Bottom Navigation bar buttons",
              "timedOut": null,
              "duration": 15011,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Step-3: Scroll to Geolocation section and validate its elements\ncy.get(\"div[class='relative h-full flex justify-center flex-col max-w-[600px] mx-auto lg:mx-0'] div[class='relative']\")\n    .scrollIntoView()\n    .should(\"be.visible\");\n// Assert on the Real time text delivery availability\ncy.get(\"div[class='relative h-full flex justify-center flex-col max-w-[600px] mx-auto lg:mx-0']\").contains(\"REAL-TIME DELIVERY ALERTS\");\n// Assert on the paragraph text below the Real time text delivery availability\ncy.get(\"h2[class='text-primary text-2xl sm:text-3xl lg:text-4xl font-bold leading-tight']\").should(\"be.visible\");\n// Step-2: Validate the Navigation buttons\ncy.get(\"div[class='absolute bottom-4 sm:bottom-6 lg:bottom-10 left-1/2 -translate-x-1/2 z-10'] > div[class='flex justify-center space-x-1 sm:space-x-2']\")\n    .should(\"be.visible\")\n    .then((buttonsList) => {\n    // Get all buttons in the navigation bottom banner\n    const buttons = buttonsList.find(\"button\");\n    cy.log(`List of Buttons  is: ${buttons}`);\n    expect(buttons.length).to.equal(6);\n});\n// Use a for loop to click on every button and verify it\nlet n = 6; // Number of buttons\nfor (let i = 1; i < n; i++) {\n    cy.get(\"div[class='absolute bottom-4 sm:bottom-6 lg:bottom-10 left-1/2 -translate-x-1/2 z-10'] > div[class='flex justify-center space-x-1 sm:space-x-2']\")\n        .should(\"be.visible\")\n        .find(\"button\")\n        .eq(i)\n        .then(($button) => {\n        const beforeColor = $button.css(\"background-color\");\n        cy.log(\"Before color: \" + beforeColor);\n        cy.wrap($button).click();\n        cy.wait(2000);\n        cy.get(\"div[class='absolute bottom-4 sm:bottom-6 lg:bottom-10 left-1/2 -translate-x-1/2 z-10'] > div[class='flex justify-center space-x-1 sm:space-x-2']\")\n            .find(\"button\")\n            .eq(i)\n            .then(($btnAfter) => {\n            const afterColor = $btnAfter.css(\"background-color\");\n            cy.log(\"After color: \" + afterColor);\n            expect(afterColor, \"Highlight color should change\").to.not.eq(beforeColor);\n        });\n    });\n    cy.wait(1000);\n}",
              "err": {
                "message": "AssertionError: Highlight color should change: expected 'oklch(0.872 0.01 258.338)' to not equal 'oklch(0.872 0.01 258.338)'",
                "estack": "AssertionError: Highlight color should change: expected 'oklch(0.872 0.01 258.338)' to not equal 'oklch(0.872 0.01 258.338)'\n    at Context.eval (webpack://testingwithcypress/./cypress/e2e/MPost/home.cy.ts:176:73)\n    at getRet (https://staging.mpost.global/__cypress/runner/cypress_runner.js:121066:20)\n    at tryCatcher (https://staging.mpost.global/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (https://staging.mpost.global/__cypress/runner/cypress_runner.js:4285:29)\n    at Context.thenFn (https://staging.mpost.global/__cypress/runner/cypress_runner.js:121077:66)\n    at Context.then (https://staging.mpost.global/__cypress/runner/cypress_runner.js:121328:21)",
                "diff": ""
              },
              "uuid": "e15d4f06-7462-4817-990e-7b2802f24d46",
              "parentUUID": "a569840c-95ec-4518-9ab2-d791cdfdbff8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should Navigate the MPost Home Page section per section",
              "fullTitle": "Automation Test of MPost website Should Navigate the MPost Home Page section per section",
              "timedOut": null,
              "duration": 13321,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Assert on the banner’s visibility\ncy.get(\"nav.bg-mpost-blue.text-white.py-4\").should(\"be.visible\");\n// Assert on the Hot sellers products section\ncy.get(\"h1[class='text-3xl md:text-4xl lg:text-5xl font-bold leading-tight']\")\n    .contains(\"Powering Universal Access and Exchange with a Universal Digital Address\")\n    .should(\"be.visible\");\n// Assert on the global navigation section\ncy.get(\".text-mpost-blue.text-2xl.font-normal.mb-4\").should(\"be.visible\");\n// // Assert on the paragraph text below the global title\ncy.get(\"p[class='text-xl sm:text-2xl font-light text-mpost-text-dark mb-4 sm:mb-6 text-left leading-relaxed']\").should(\"be.visible\");\n// Step-3: Scroll to Geolocation section and validate its elements\ncy.get(\"div[class='relative h-full flex justify-center flex-col max-w-[600px] mx-auto lg:mx-0'] div[class='relative']\")\n    .scrollIntoView()\n    .should(\"be.visible\");\n// Assert on the Real time text delivery availability\ncy.get(\"div[class='relative h-full flex justify-center flex-col max-w-[600px] mx-auto lg:mx-0']\").contains(\"REAL-TIME DELIVERY ALERTS\");\n// Assert on the paragraph text below the Real time text delivery availability\ncy.get(\"h2[class='text-primary text-2xl sm:text-3xl lg:text-4xl font-bold leading-tight']\").should(\"be.visible\");\n// Step-4: Scroll to Universal address section and validate its elements\ncy.get(\"div[class='relative h-full flex justify-center flex-col max-w-[600px] mx-auto lg:mx-0'] div[class='relative']\")\n    .scrollIntoView()\n    .should(\"be.visible\");\n// Assert on the Universal address text availability\ncy.get(\"div[class='relative h-full flex justify-center flex-col max-w-[600px] mx-auto lg:mx-0'] div[class='relative']\").contains(\"A UNIVERSAL ADDRESS\");\n// Assert on the paragraph text below the Universal address title\ncy.get(\"h2[class='text-primary text-2xl sm:text-3xl lg:text-4xl font-bold leading-tight']\").contains(\"Never lose a delivery again, no matter where life takes you.\");\n//Step-5: Scroll to Geolocation section and validate its elements\ncy.get(\"div[class='relative h-full flex justify-center flex-col max-w-[600px] mx-auto lg:mx-0'] div[class='relative']\")\n    .scrollIntoView()\n    .should(\"be.visible\");\ncy.get(\"div[class='relative h-full flex justify-center flex-col max-w-[600px] mx-auto lg:mx-0'] div[class='relative']\").should(\"be.visible\");\ncy.wait(2000);\n// Assert on the Geolocation text availability\ncy.get(\"div[class='relative h-full flex justify-center flex-col max-w-[600px] mx-auto lg:mx-0'] div[class='relative']\").contains(\"GEOLOCATION\");\n// Assert on the paragraph text below the Universal address title\ncy.get(\"h2[class='text-primary text-2xl sm:text-3xl lg:text-4xl font-bold leading-tight']\").contains(\"You're always in control of where your deliveries go.\");\n// //Step-6: Navigate to Parcel Locker section\ncy.get(\"div[class='relative h-full flex justify-center flex-col max-w-[600px] mx-auto lg:mx-0'] div[class='relative']\")\n    .scrollIntoView()\n    .should(\"be.visible\");\n// Assert on the Geolocation text availability\ncy.get(\"div[class='relative h-full flex justify-center flex-col max-w-[600px] mx-auto lg:mx-0'] div[class='relative']\").contains(\"PARCEL LOCKERS\");\n// Assert on the paragraph text below the Universal address title\ncy.get(\"h2[class='text-primary text-2xl sm:text-3xl lg:text-4xl font-bold leading-tight']\").contains(\"You're always in control of where your deliveries go.\");",
              "err": {
                "message": "CypressError: Timed out retrying after 4000ms: `cy.should()` failed because the page updated as a result of this command, but you tried to continue the command chain. The subject is no longer attached to the DOM, and Cypress cannot requery the page after commands such as `cy.should()`.\n\nCommon situations why this happens:\n  - Your JS framework re-rendered asynchronously\n  - Your app code reacted to an event firing and removed the element\n\nYou can typically solve this by breaking up a chain. For example, rewrite:\n\n> `cy.get('button').click().should('have.class', 'active')`\n\nto\n\n> `cy.get('button').as('btn').click()`\n> `cy.get('@btn').should('have.class', 'active')`\n\nhttps://on.cypress.io/element-has-detached-from-dom",
                "estack": "CypressError: Timed out retrying after 4000ms: `cy.should()` failed because the page updated as a result of this command, but you tried to continue the command chain. The subject is no longer attached to the DOM, and Cypress cannot requery the page after commands such as `cy.should()`.\n\nCommon situations why this happens:\n  - Your JS framework re-rendered asynchronously\n  - Your app code reacted to an event firing and removed the element\n\nYou can typically solve this by breaking up a chain. For example, rewrite:\n\n> `cy.get('button').click().should('have.class', 'active')`\n\nto\n\n> `cy.get('button').as('btn').click()`\n> `cy.get('@btn').should('have.class', 'active')`\n\nhttps://on.cypress.io/element-has-detached-from-dom\n    at Object.isAttached (https://staging.mpost.global/__cypress/runner/cypress_runner.js:148540:58)\n    at applyChainers (https://staging.mpost.global/__cypress/runner/cypress_runner.js:120604:24)\n    at tryCatcher (https://staging.mpost.global/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (https://staging.mpost.global/__cypress/runner/cypress_runner.js:4285:29)\n    at Context.shouldFn (https://staging.mpost.global/__cypress/runner/cypress_runner.js:120632:66)\n    at Context.should (https://staging.mpost.global/__cypress/runner/cypress_runner.js:120649:23)\n    at <unknown> (https://staging.mpost.global/__cypress/runner/cypress_runner.js:146597:39)\n    at assertions (https://staging.mpost.global/__cypress/runner/cypress_runner.js:146845:16)\n    at tryCatcher (https://staging.mpost.global/__cypress/runner/cypress_runner.js:1777:23)\n    at Object.gotValue (https://staging.mpost.global/__cypress/runner/cypress_runner.js:6448:18)\n    at Object.gotAccum (https://staging.mpost.global/__cypress/runner/cypress_runner.js:6435:25)\n    at Object.tryCatcher (https://staging.mpost.global/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (https://staging.mpost.global/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (https://staging.mpost.global/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromiseCtx (https://staging.mpost.global/__cypress/runner/cypress_runner.js:1583:10)\n    at _drainQueueStep (https://staging.mpost.global/__cypress/runner/cypress_runner.js:2381:12)\n    at _drainQueue (https://staging.mpost.global/__cypress/runner/cypress_runner.js:2370:9)\n    at Async._drainQueues (https://staging.mpost.global/__cypress/runner/cypress_runner.js:2386:5)\n    at Async.drainQueues (https://staging.mpost.global/__cypress/runner/cypress_runner.js:2256:14)\nFrom Your Spec Code:\n    at Context.eval (webpack://testingwithcypress/./cypress/e2e/MPost/home.cy.ts:242:7)",
                "diff": null
              },
              "uuid": "c97bc672-151e-4805-8afb-ab317b776dc3",
              "parentUUID": "a569840c-95ec-4518-9ab2-d791cdfdbff8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ded8c7c2-ba89-4faf-8674-e31cf2d06484",
            "ad44ae65-0a5e-40ce-bdd2-3686dfde96e0"
          ],
          "failures": [
            "714448f8-49e1-4d3f-90c9-c701aa021571",
            "e15d4f06-7462-4817-990e-7b2802f24d46",
            "c97bc672-151e-4805-8afb-ab317b776dc3"
          ],
          "pending": [],
          "skipped": [],
          "duration": 114126,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "eaaac19a-961f-46c4-988a-efd0fbcecabb",
      "title": "",
      "fullFile": "cypress\\e2e\\MPost\\ourSolutionPage.cy.ts",
      "file": "cypress\\e2e\\MPost\\ourSolutionPage.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fcb8b64e-f624-430a-99c1-2b918b4664fb",
          "title": "MPost Our Solution Page Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should load page and display main elements",
              "fullTitle": "MPost Our Solution Page Tests should load page and display main elements",
              "timedOut": null,
              "duration": 11530,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Assert page title\ncy.title().should(\"include\", \"MPost - Say Goodbye to Unverifiable Addresses and Frustrating Deliveries\");\ncy.get(\"meta[name='description']\").should(\"have.attr\", \"content\", \"Whether you're an individual, a business, or a government agency, MPost helps you connect, deliver, and grow, anywhere, anytime.\");\n// Assert page heading\ncy.contains(\"h1\", \"OUR SOLUTIONS\").should(\"be.visible\");\n// Assert page description\ncy.contains(\"Say Goodbye to Unverifiable Addresses and Frustrating Deliveries\").should(\"be.visible\");\n// Assert presence of buttons\ncy.contains(\"button\", \"Get Your Digital Address\").should(\"be.visible\");\ncy.contains(\"button\", \"Partner With Us\").should(\"be.visible\");",
              "err": {},
              "uuid": "7d30bcf0-97a7-439f-9fee-1e8a452072a3",
              "parentUUID": "fcb8b64e-f624-430a-99c1-2b918b4664fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should scroll to 'Solutions' and validate each left navigation item",
              "fullTitle": "MPost Our Solution Page Tests should scroll to 'Solutions' and validate each left navigation item",
              "timedOut": null,
              "duration": 9481,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Scroll to Solutions heading\ncy.contains(\"h3\", \"Solutions\").scrollIntoView().should(\"be.visible\");\n// Navigation list assertions\nconst navItems = [\n    \"Individuals & Small Businesses\",\n    \"Postal Authorities\",\n    \"Financial Institutions\",\n    \"E-commerce & Logistics\",\n    \"Coming Soon\",\n    \"Why MPost?\",\n];\nnavItems.forEach((item) => {\n    cy.contains(\"li\", item).should(\"be.visible\").click();\n    // cy.contains(\"h2, h3\", item.split(\" \")[0]).should(\"be.visible\"); \n});",
              "err": {},
              "uuid": "c0147bba-c82e-4100-806e-26f74b887a23",
              "parentUUID": "fcb8b64e-f624-430a-99c1-2b918b4664fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display the 'Join thousands...' section and buttons",
              "fullTitle": "MPost Our Solution Page Tests should display the 'Join thousands...' section and buttons",
              "timedOut": null,
              "duration": 7471,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Navigate to the section\ncy.contains(\"Join thousands already using MPost to simplify their lives, grow their businesses, and expand their reach.\")\n    .scrollIntoView()\n    .should(\"be.visible\");\n// Assert buttons\ncy.contains(\"button\", \"Get Your Digital Address\").should(\"be.visible\");\ncy.contains(\"button\", \"Partner With Us\").should(\"be.visible\");",
              "err": {},
              "uuid": "02ba9153-3c63-4230-be0b-db87adb5c753",
              "parentUUID": "fcb8b64e-f624-430a-99c1-2b918b4664fb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7d30bcf0-97a7-439f-9fee-1e8a452072a3",
            "c0147bba-c82e-4100-806e-26f74b887a23",
            "02ba9153-3c63-4230-be0b-db87adb5c753"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 28482,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a920488b-875a-4c3c-8a74-671f9326c9fb",
      "title": "",
      "fullFile": "cypress\\e2e\\MPost\\partnerWithUs.cy.ts",
      "file": "cypress\\e2e\\MPost\\partnerWithUs.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ccbd8fe1-ebce-4809-aa14-07990747e65d",
          "title": "MPost Partner With Us Page Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should load page and display main elements",
              "fullTitle": "MPost Partner With Us Page Tests should load page and display main elements",
              "timedOut": null,
              "duration": 8995,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Assert page title\ncy.title().should(\"eq\", \"MPost - Exchange Anything. Anytime. Anywhere.\");\ncy.get(\"meta[name='description']\").should(\"have.attr\", \"content\", \"MPost - Join millions of individuals and businesses using MPOST as their universal digital address—enabling secure mail and parcel delivery, hassle-free returns for online shoppers, and seamless identity verification for both local and global transactions.\");\n// Assert page heading\ncy.contains(\"h1\", \"PARTNER WITH US\").should(\"be.visible\");\n// Assert page description\ncy.contains(\"Join us in building Africa's digital addressing infrastructure and unlock new opportunities for growth.\").should(\"be.visible\");\n// Assert presence of buttons\ncy.contains(\"Why Partner with MPost?\").should(\"be.visible\").scrollIntoView();\ncy.contains(\"Our Partnership Models\").should(\"be.visible\");\ncy.contains(\"Let's Work Together\").should(\"be.visible\").scrollIntoView();",
              "err": {},
              "uuid": "fce22b81-773f-4ccd-a9e4-90f46809fcab",
              "parentUUID": "ccbd8fe1-ebce-4809-aa14-07990747e65d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should validate input fields of the partners form",
              "fullTitle": "MPost Partner With Us Page Tests should validate input fields of the partners form",
              "timedOut": null,
              "duration": 5404,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains(\"Partnership Inquiry\")\n    .scrollIntoView()\n    .should(\"be.visible\");\n// cy.contains(\"button\", \"Submit\").click();\ncy.get(\"input#name\").should(\"be.visible\").and(\"have.attr\", \"placeholder\", \"Enter your full name\");\ncy.get(\"input#email\").should(\"be.visible\").and(\"have.attr\", \"placeholder\", \"Enter your email address\");\ncy.get(\"input#company\").should(\"be.visible\").and(\"have.attr\", \"placeholder\", \"Enter your company name\");\ncy.get(\"input#role\").should(\"be.visible\").and(\"have.attr\", \"placeholder\", \"Enter your role or title\");\n// Dropdown (Partnership Field)\ncy.get(\"#partnershipField\").should(\"exist\"); // input inside Ant Design select\ncy.contains(\"span\", \"Select partnership field\").should(\"be.visible\");\n// Monthly Users field\ncy.get(\"input#monthlyUsers\")\n    .should(\"be.visible\")\n    .and(\"have.attr\", \"placeholder\", \"e.g., 10,000 or 50K-100K\");\n// Message textarea\ncy.get(\"textarea#message\")\n    .should(\"be.visible\")\n    .and(\"have.attr\", \"placeholder\")\n    .and(\"include\", \"Tell us about your partnership interest\");\n// Submit button\ncy.contains(\"button span\", \"Send Partnership Inquiry\")\n    .should(\"be.visible\")\n    .and(\"not.be.disabled\");",
              "err": {},
              "uuid": "4aa0f7e9-abe3-4e31-9133-967f6e5279af",
              "parentUUID": "ccbd8fe1-ebce-4809-aa14-07990747e65d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display error message when submiting an empty partners form",
              "fullTitle": "MPost Partner With Us Page Tests should display error message when submiting an empty partners form",
              "timedOut": null,
              "duration": 4829,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains(\"Partnership Inquiry\")\n    .scrollIntoView()\n    .should(\"be.visible\");\ncy.contains(\"button span\", \"Send Partnership Inquiry\").click();\n// Assert that each required field displays the \"Required\" message\nconst requiredFields = [\n    \"#name\",\n    \"#email\",\n    \"#company\",\n    \"#role\",\n    // \"#partnershipField\",\n    \"#monthlyUsers\",\n    \"#message\"\n];\nrequiredFields.forEach((selector) => {\n    cy.get(selector)\n        .siblings(\"div[class='text-red-500 text-sm']\").contains(\"Required\").should(\"be.visible\");\n    // .within(() => {\n    //     cy.contains(\"Required\").should(\"be.visible\");\n    // });\n});",
              "err": {},
              "uuid": "28c601e7-1cf4-4b1a-9809-4389f7fc49a6",
              "parentUUID": "ccbd8fe1-ebce-4809-aa14-07990747e65d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fill out and submit the partners form with valid data",
              "fullTitle": "MPost Partner With Us Page Tests should fill out and submit the partners form with valid data",
              "timedOut": null,
              "duration": 10074,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains(\"Partnership Inquiry\")\n    .scrollIntoView()\n    .should(\"be.visible\");\n// cy.contains(\"button\", \"Submit\").click();\ncy.get(\"input#name\").should(\"be.visible\").and(\"have.attr\", \"placeholder\", \"Enter your full name\").type(\"Khan Chris\");\ncy.get(\"input#email\").should(\"be.visible\").and(\"have.attr\", \"placeholder\", \"Enter your email address\").type(\"khan.chris@example.com\");\ncy.get(\"input#company\").should(\"be.visible\").and(\"have.attr\", \"placeholder\", \"Enter your company name\").type(\"Chris Company\");\ncy.get(\"input#role\").should(\"be.visible\").and(\"have.attr\", \"placeholder\", \"Enter your role or title\").type(\"Partnership Manager\");\n// Select an option from the dropdown (Partnership Field)\ncy.get(\"#partnershipField\").click({ force: true });\n// Select the option \"Banks & Fintechs\"\ncy.contains(\".ant-select-dropdown .ant-select-item\", \"Banks & Fintechs\")\n    .click({ force: true });\n// Assert that the value is selected\ncy.get(\".ant-select-selector\").should(\"contain.text\", \"Banks & Fintechs\");\n// Monthly Users field\ncy.get(\"input#monthlyUsers\")\n    .should(\"be.visible\")\n    .and(\"have.attr\", \"placeholder\", \"e.g., 10,000 or 50K-100K\").type(\"50K-100K\");\n// Message textarea\ncy.get(\"textarea#message\").type(\"We are interested in partnering with MPost to enhance our delivery services.\");\n// Submit button\ncy.contains(\"button span\", \"Send Partnership Inquiry\")\n    .should(\"be.visible\")\n    .and(\"not.be.disabled\");",
              "err": {},
              "uuid": "2d1d9026-eed9-4f3a-898d-e4db52b14ed2",
              "parentUUID": "ccbd8fe1-ebce-4809-aa14-07990747e65d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fce22b81-773f-4ccd-a9e4-90f46809fcab",
            "4aa0f7e9-abe3-4e31-9133-967f6e5279af",
            "28c601e7-1cf4-4b1a-9809-4389f7fc49a6",
            "2d1d9026-eed9-4f3a-898d-e4db52b14ed2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 29302,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}